# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        scala: [2.12, 2.13, 3]
        java: [temurin@8, temurin@17, graalvm@21]
        project: [catsNative, catsJS, catsJVM]
        exclude:
          - scala: 2.12
            java: temurin@17
          - scala: 2.12
            java: graalvm@21
          - scala: 3
            java: temurin@17
          - scala: 3
            java: graalvm@21
          - project: catsNative
            java: temurin@17
          - project: catsNative
            java: graalvm@21
          - project: catsJS
            java: temurin@17
          - project: catsJS
            java: graalvm@21
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Check headers and formatting
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck

      - name: nativeLink
        if: matrix.project == 'catsNative'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/nativeLink

      - name: scalaJSLink
        if: matrix.project == 'catsJS'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: Test
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'temurin@8' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' doc

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: mkdir -p algebra-laws/jvm/target free/.js/target testkit/.native/target testkit/.js/target unidocs/target core/.native/target free/.jvm/target free/.native/target alleycats-laws/native/target laws/.native/target alleycats-core/.js/target alleycats-laws/js/target kernel/.jvm/target core/.js/target kernel/.js/target algebra-laws/native/target kernel-laws/native/target laws/.js/target core/.jvm/target alleycats-core/.native/target kernel/.native/target algebra-core/.jvm/target kernel-laws/jvm/target algebra-core/.js/target alleycats-laws/jvm/target laws/.jvm/target algebra-core/.native/target alleycats-core/.jvm/target kernel-laws/js/target testkit/.jvm/target algebra-laws/js/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: tar cf targets.tar algebra-laws/jvm/target free/.js/target testkit/.native/target testkit/.js/target unidocs/target core/.native/target free/.jvm/target free/.native/target alleycats-laws/native/target laws/.native/target alleycats-core/.js/target alleycats-laws/js/target kernel/.jvm/target core/.js/target kernel/.js/target algebra-laws/native/target kernel-laws/native/target laws/.js/target core/.jvm/target alleycats-core/.native/target kernel/.native/target algebra-core/.jvm/target kernel-laws/jvm/target algebra-core/.js/target alleycats-laws/jvm/target laws/.jvm/target algebra-core/.native/target alleycats-core/.jvm/target kernel-laws/js/target testkit/.jvm/target algebra-laws/js/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}-${{ matrix.project }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Download target directories (2.12, catsNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12-catsNative

      - name: Inflate target directories (2.12, catsNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12, catsJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12-catsJS

      - name: Inflate target directories (2.12, catsJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12, catsJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12-catsJVM

      - name: Inflate target directories (2.12, catsJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13, catsNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13-catsNative

      - name: Inflate target directories (2.13, catsNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13, catsJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13-catsJS

      - name: Inflate target directories (2.13, catsJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13, catsJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13-catsJVM

      - name: Inflate target directories (2.13, catsJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3, catsNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3-catsNative

      - name: Inflate target directories (3, catsNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3, catsJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3-catsJS

      - name: Inflate target directories (3, catsJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3, catsJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3-catsJVM

      - name: Inflate target directories (3, catsJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: echo $PGP_SECRET | base64 -d -i - | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: |
          echo "$PGP_SECRET" | base64 -d -i - > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
        run: sbt tlCiRelease

  dependency-submission:
    name: Submit Dependencies
    if: github.event.repository.fork == false && github.event_name != 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Submit Dependencies
        uses: scalacenter/sbt-dependency-submission@v2
        with:
          modules-ignore: catsnative_2.12 catsnative_2.13 catsnative_3 docs_2.12 docs_2.13 docs_3 cats-tests_sjs1_2.12 cats-tests_sjs1_2.13 cats-tests_sjs1_3 cats-tests_2.12 cats-tests_2.13 cats-tests_3 catsjs_2.12 catsjs_2.13 catsjs_3 catsjvm_2.12 catsjvm_2.13 catsjvm_3 bincompattest_2.12 bincompattest_2.13 bincompattest_3 cats-tests_native0.5_2.12 cats-tests_native0.5_2.13 cats-tests_native0.5_3 cats-bench_2.12 cats-bench_2.13 cats-bench_3
          configs-ignore: test scala-tool scala-doc-tool test-internal

  validate-steward:
    name: Validate Steward Config
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v4

      - name: Setup Java (temurin@11)
        id: setup-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - uses: coursier/setup-action@v1
        with:
          apps: scala-steward

      - run: scala-steward validate-repo-config .scala-steward.conf

  site:
    name: Generate Site
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Generate site
        run: sbt docs/tlSite

      - name: Publish site
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site/target/docs/site
          keep_files: true

  scalafix:
    name: Scalafix
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@8)
        id: setup-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@8' && steps.setup-java-temurin-8.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Scalafix tests
        run: |
          cd scalafix
          sbt test
